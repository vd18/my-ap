{"ast":null,"code":"var _jsxFileName = \"E:\\\\react with harry\\\\my-ap\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './comonent/Navbar';\nimport Textbox from './comonent/Textbox';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const bgcolorchange = () => {\n    if (bgcolor.color === 'black') {\n      setbgcolor({\n        color: 'white',\n        backgroundColor: 'black'\n      });\n      setbtntxt('Light mode');\n    } else {\n      setbgcolor({\n        color: 'black',\n        backgroundColor: 'white'\n      });\n      setbtntxt('Dark mode');\n    }\n  };\n  const [bgcolor, setbgcolor] = useState({\n    color: 'black',\n    backgroundColor: 'white'\n  });\n  const [btntxt, setbtntxt] = useState('Dark mode');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"vd\",\n      about: \"about vd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Textbox, {\n        title: \"Enter text to analyze\",\n        style: bgcolor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-check form-switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-check-input\",\n          onClick: bgcolorchange,\n          type: \"checkbox\",\n          role: \"switch\",\n          id: \"flexSwitchCheckDefault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"form-check-label\",\n          for: \"flexSwitchCheckDefault\",\n          children: btntxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"CUI83jpwMzvb3WEArvEAK1MGhoo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textbox","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","props","_s","bgcolorchange","bgcolor","color","setbgcolor","backgroundColor","setbtntxt","btntxt","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","style","class","onClick","type","role","id","for","_c","$RefreshReg$"],"sources":["E:/react with harry/my-ap/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './comonent/Navbar';\nimport Textbox from './comonent/Textbox';\nimport React,  {useState} from 'react'\n\nfunction App(props) {\n  const bgcolorchange = ()=>{\n    if(bgcolor.color === 'black'){\n     setbgcolor({\n      color: 'white',\n      backgroundColor: 'black',\n     })\n     setbtntxt('Light mode')\n    }\n    else{\n      setbgcolor({\n        color: 'black',\n        backgroundColor: 'white'\n       })\n       setbtntxt('Dark mode')\n    }\n  }\n\n  const [bgcolor , setbgcolor] = useState({\n    color: 'black',\n    backgroundColor: 'white'\n  })\n\n  const [btntxt , setbtntxt] = useState('Dark mode')\n\n  \n  return (\n  <>\n  <Navbar title = 'vd'  about = 'about vd'/>\n  <div className='container'>\n    <Textbox title = 'Enter text to analyze' style={bgcolor}/>\n    <div class=\"form-check form-switch\">\n  <input class=\"form-check-input\" onClick={bgcolorchange} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n  <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">{btntxt}</label>\n</div>\n  </div>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAMC,aAAa,GAAGA,CAAA,KAAI;IACxB,IAAGC,OAAO,CAACC,KAAK,KAAK,OAAO,EAAC;MAC5BC,UAAU,CAAC;QACVD,KAAK,EAAE,OAAO;QACdE,eAAe,EAAE;MAClB,CAAC,CAAC;MACFC,SAAS,CAAC,YAAY,CAAC;IACxB,CAAC,MACG;MACFF,UAAU,CAAC;QACTD,KAAK,EAAE,OAAO;QACdE,eAAe,EAAE;MAClB,CAAC,CAAC;MACFC,SAAS,CAAC,WAAW,CAAC;IACzB;EACF,CAAC;EAED,MAAM,CAACJ,OAAO,EAAGE,UAAU,CAAC,GAAGX,QAAQ,CAAC;IACtCU,KAAK,EAAE,OAAO;IACdE,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAM,CAACE,MAAM,EAAGD,SAAS,CAAC,GAAGb,QAAQ,CAAC,WAAW,CAAC;EAGlD,oBACAE,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACAb,OAAA,CAACL,MAAM;MAACmB,KAAK,EAAG,IAAI;MAAEC,KAAK,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC1CnB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAP,QAAA,gBACxBb,OAAA,CAACJ,OAAO;QAACkB,KAAK,EAAG,uBAAuB;QAACO,KAAK,EAAEd;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC1DnB,OAAA;QAAKsB,KAAK,EAAC,wBAAwB;QAAAT,QAAA,gBACrCb,OAAA;UAAOsB,KAAK,EAAC,kBAAkB;UAACC,OAAO,EAAEjB,aAAc;UAACkB,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,QAAQ;UAACC,EAAE,EAAC;QAAwB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACnHnB,OAAA;UAAOsB,KAAK,EAAC,kBAAkB;UAACK,GAAG,EAAC,wBAAwB;UAAAd,QAAA,EAAED;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA,gBACH;AAEL;AAACd,EAAA,CAtCQF,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}