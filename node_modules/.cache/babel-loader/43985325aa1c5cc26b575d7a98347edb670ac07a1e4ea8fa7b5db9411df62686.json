{"ast":null,"code":"var _jsxFileName = \"E:\\\\react with harry\\\\my-ap\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './comonent/Navbar';\nimport Textbox from './comonent/Textbox';\nimport Alert from './comonent/Alert';\nimport About from './About';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      showAlert(null);\n    }, 6000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert('Dark mode enable', 'success');\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode enable', 'success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"vd\",\n      mode: mode,\n      toggleMode: toggleMode,\n      about: \"about vd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Textbox, {\n        showAlert: showAlert,\n        title: \"Enter text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"IMrho2uU+M4ZDYHrspFeVdNrlUY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textbox","Alert","About","React","useState","BrowserRouter","Router","Switch","Route","Link","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","props","_s","mode","setmode","alert","setalert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["E:/react with harry/my-ap/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './comonent/Navbar';\nimport Textbox from './comonent/Textbox';\nimport Alert from './comonent/Alert';\nimport About from './About';\nimport React,  {useState} from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Routes\n} from \"react-router-dom\";\n\nfunction App(props) {\n\n  const [mode, setmode] = useState('light')\n\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setalert({\n      msg: message,\n      type: type\n  })\n  setTimeout(() => {\n    showAlert(null)\n  }, 6000);\n\n\n\n  }\n  \n\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setmode('dark')\n      document.body.style.backgroundColor = 'black';\n      showAlert('Dark mode enable', 'success')\n    }\n    else{\n      setmode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode enable', 'success')\n    }\n  }\n\n  return (\n  <>\n  {/* <Router> */}\n  <Navbar title = 'vd' mode={mode} toggleMode={toggleMode}  about = 'about vd'/>\n  <Alert alert={alert} />\n  <div className='container'>\n\n    {/* <Routes>\n          <Route path=\"/About\" element={<About />} />\n          <Route path=\"/\" element = {} />\n          \n          </Routes>\n       */}\n        {/* <Route path=\"/about\" element={<About />} />\n          <Route path=\"/\" element={<Home />} /> */}\n <Textbox showAlert={showAlert} title = 'Enter text to analyze' mode={mode}/>\n \n  </div>\n  {/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,MAAM,QACD,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMkB,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACV,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfJ,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;EAIR,CAAC;EAID,MAAMK,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGT,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,kBAAkB,EAAE,SAAS,CAAC;IAC1C,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,mBAAmB,EAAE,SAAS,CAAC;IAC3C;EACF,CAAC;EAED,oBACAV,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBAEApB,OAAA,CAACb,MAAM;MAACkC,KAAK,EAAG,IAAI;MAACf,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA,UAAW;MAAEO,KAAK,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC9E1B,OAAA,CAACX,KAAK;MAACmB,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvB1B,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAP,QAAA,eAU3BpB,OAAA,CAACZ,OAAO;QAACsB,SAAS,EAAEA,SAAU;QAACW,KAAK,EAAG,uBAAuB;QAACf,IAAI,EAAEA;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAErE;EAAA,gBAEH;AAEL;AAACrB,EAAA,CAvDQF,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}