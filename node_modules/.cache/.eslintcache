[{"E:\\react with harry\\my-ap\\src\\index.js":"1","E:\\react with harry\\my-ap\\src\\App.js":"2","E:\\react with harry\\my-ap\\src\\reportWebVitals.js":"3","E:\\react with harry\\my-ap\\src\\comonent\\Navbar.js":"4","E:\\react with harry\\my-ap\\src\\comonent\\textbox.js":"5","E:\\react with harry\\my-ap\\src\\comonent\\Textbox.js":"6","E:\\react with harry\\my-ap\\src\\comonent\\Alert.js":"7","E:\\react with harry\\my-ap\\src\\about.js":"8","E:\\react with harry\\my-ap\\src\\About.js":"9"},{"size":324,"mtime":1681788550598,"results":"10","hashOfConfig":"11"},{"size":1643,"mtime":1682307612485,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1681787576102,"results":"13","hashOfConfig":"11"},{"size":1730,"mtime":1682234385584,"results":"14","hashOfConfig":"11"},{"size":2658,"mtime":1682049734506,"results":"15","hashOfConfig":"11"},{"size":3712,"mtime":1682308524715,"results":"16","hashOfConfig":"11"},{"size":316,"mtime":1682308112305,"results":"17","hashOfConfig":"11"},{"size":4241,"mtime":1682226703817,"results":"18","hashOfConfig":"11"},{"size":4241,"mtime":1682226703817,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1hu6xyy",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"E:\\react with harry\\my-ap\\src\\index.js",[],[],[],"E:\\react with harry\\my-ap\\src\\App.js",[],[],"E:\\react with harry\\my-ap\\src\\reportWebVitals.js",[],[],"E:\\react with harry\\my-ap\\src\\comonent\\Navbar.js",["50","51"],[],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n// ${props.dark}\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode}\r\n    bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/About\">About</a>\r\n          </li> */}\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/About\">about</Link>\r\n          </li> */}\r\n         \r\n        </ul>\r\n        <div className={ `form-check form-switch text-${props.mode === `light`?`dark`:`light`}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  \r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = { title : PropTypes.string ,\r\n                    about :  PropTypes.string  }\r\n","E:\\react with harry\\my-ap\\src\\comonent\\textbox.js",[],[],"E:\\react with harry\\my-ap\\src\\comonent\\Textbox.js",["52"],[],"import React,  {useState} from 'react'\r\n\r\nexport default function Textbox(props) {\r\n\r\n  const first = ()=>{\r\n    if(text === ''){\r\n      props.showAlert('Write something' , 'danger')\r\n    }\r\n    else{\r\n    console.log(text);\r\n    let nowtext = text.toLowerCase().split(' ').map(word => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n    }).join(' ')\r\n\r\n    setText(nowtext)\r\n    props.showAlert('First letter is capitalized' , 'success')\r\n  \r\n  }\r\n\r\n  }\r\n\r\n  const handleONclicku = ()=>{\r\n    if(text === ''){\r\n      props.showAlert('Write something' , 'danger')\r\n    }\r\n    else{\r\n    // console.log('button is click' + text);\r\n    let nowtext = text.toLocaleUpperCase()\r\n    setText(nowtext)\r\n    props.showAlert('Converted to UpperCase' , 'success')\r\n  }\r\n  }\r\n  const handleONclickl = ()=>{\r\n    // console.log('button is click' + text);\r\n    if(text === ''){\r\n      props.showAlert('Write something' , 'danger')\r\n    }\r\n    else{\r\n    let nowtext = text.toLocaleLowerCase()\r\n    setText(nowtext)\r\n    props.showAlert('Converted to LowerCase' , 'success')\r\n  }\r\n  }\r\n\r\n\r\n  const handleONclickd = ()=>{\r\n    if(text === ''){\r\n      props.showAlert('Write something' , 'danger')\r\n    }\r\n    else{\r\n    setText('')\r\n    props.showAlert('Cleared Text' , 'success')\r\n  }}\r\n\r\n  \r\n  \r\n  const handleONchange = (event)=>{\r\n    // console.log('on change');\r\n    setText(event.target.value)\r\n    // console.log(event.target.value);\r\n    // props.showAlert('First letter is capitalized' , 'success')\r\n  }\r\n\r\n  //copytxt\r\n\r\n  const copytxt = ()=>{\r\n    if(text === ''){\r\n      props.showAlert('Write something' , 'danger')\r\n    }\r\n    else{\r\n    var textq = document.getElementById('mybox');\r\n    textq.select();\r\n    navigator.clipboard.writeText(textq.value)\r\n    props.showAlert('Text copied on clipboard' , 'success')\r\n  }\r\n  }\r\n  //remove sextra sace\r\n  \r\n const space = ()=>{\r\n  if(text === ''){\r\n    props.showAlert('Write something' , 'danger')\r\n  }\r\n  else{\r\n    let newtxt = text.split(/[ ]+/);\r\n    setText(newtxt.join(\" \"))\r\n    props.showAlert('Extra space removed' , 'success')\r\n\r\n }}\r\n\r\n\r\n//dark mode\r\n\r\n\r\n  \r\n// dark mode finish\r\n\r\n\r\n  const [text , setText] = useState('')\r\n  return (\r\n    <div  style={{color:props.mode === `dark`?`white`:`black` }}>\r\n        <h1>{props.title}</h1>  \r\n       \r\n        <div className=\"mb-3\"  style={{color:props.mode === `dark`?`white`:`black` }} >\r\n             <textarea className=\"form-control\"  style={{backgroundColor:props.mode === `dark`?`gray`:`white`, color: props.mode === `dark`?`white`:`black` }} value={text} onChange= {handleONchange}id=\"mybox\" rows=\"9\"></textarea>\r\n        </div>\r\n              <button className='btn btn-primary mx-1 my-1' onClick={handleONclicku}>Convert to Uppercase</button>\r\n              <button className='btn btn-primary mx-1 my-1' onClick={handleONclickl}>Convert to Lowercase</button>\r\n\r\n             \r\n               <button className='btn btn-primary mx-1 my-1'  onClick={copytxt}>Copy</button>\r\n               <button className='btn btn-primary mx-1 my-1'  onClick={space}>Remove extra space</button>\r\n               <button className='btn btn-primary mx-1 my-1'  onClick={first}>First latter capital</button>\r\n               <button className='btn btn-danger mx-1 my-1'  onClick={handleONclickd}>Clear text</button>\r\n              \r\n             \r\n\r\n\r\n\r\n\r\n              <div className='containar my-2'style={{color:props.mode === `dark`?`white`:`black` }}>\r\n             \r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").filter((element)=>{return element.length!=0}).length} Words and {text.length} characters</p>\r\n              </div>\r\n             \r\n    </div>   \r\n  )\r\n}\r\n","E:\\react with harry\\my-ap\\src\\comonent\\Alert.js",[],[],"E:\\react with harry\\my-ap\\src\\about.js",[],[],"E:\\react with harry\\my-ap\\src\\About.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":11,"column":7,"nodeType":"55","endLine":11,"endColumn":44},{"ruleId":"53","severity":1,"message":"54","line":18,"column":13,"nodeType":"55","endLine":18,"endColumn":73},{"ruleId":"56","severity":1,"message":"57","line":123,"column":77,"nodeType":"58","messageId":"59","endLine":123,"endColumn":79},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]